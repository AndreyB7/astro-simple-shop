---
import type { Meta, Seo } from "@/config/landing.interface";
import "@fontsource-variable/rubik";

interface Props {
  meta: Meta;
  seo: Seo;
}

const url = new URL(
  Astro.url.pathname.endsWith("/")
    ? Astro.url.pathname
    : Astro.url.pathname + "/",
  Astro.site
);

const { meta, seo } = Astro.props;

const ldJson = JSON.stringify(meta.ldJson);

import "aos/dist/aos.css";
---

<!doctype html>
<html
  class="scrollbar-thin scrollbar-thumb-white scrollbar-track-transparent scroll-smooth"
  lang={meta.lang ?? "en"}
>
  <head>
    <meta charset={meta.charset ?? "UTF-8"} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <title>{seo.title}</title>
    <meta name="description" content={seo.description} />
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={url.toString()} />
    <meta property="og:title" content={seo.title} />
    <meta property="og:description" content={seo.description} />
    {
      seo.image && (
        <meta
          property="og:image"
          content={new URL(seo.image, Astro.site).toString()}
        />
      )
    }
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={url.toString()} />
    <meta property="twitter:title" content={seo.title} />
    <meta property="twitter:description" content={seo.description} />
    {
      seo.image && (
        <meta
          property="twitter:image"
          content={new URL(seo.image, Astro.site).toString()}
        />
      )
    }

    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="icon"
      type="image/svg+xml"
      href="https://aliasevpro.ru/favicon.svg"
    />
    <link rel="canonical" href={url.toString()} />
    <script is:inline type="application/ld+json" set:html={ldJson} />
    <!-- Yandex.Metrika counter -->
    <script is:inline type="text/javascript">
      (function (m, e, t, r, i, k, a) {
        if (m[i]) return;
        m[i] = function () {
          (m[i].a = m[i].a || []).push(arguments);
        };
        m[i].l = 1 * new Date();
        for (var j = 0; j < document.scripts.length; j++) {
          if (document.scripts[j].src === r) return;
        }
        k = e.createElement(t);
        a = e.getElementsByTagName(t)[0];
        k.async = 1;
        k.src = r;
        a.parentNode.insertBefore(k, a);
      })(
        window,
        document,
        "script",
        "https://mc.yandex.ru/metrika/tag.js",
        "ym"
      );

      // eslint-disable-next-line no-undef
      ym(99150938, "init", {
        clickmap: true,
        trackLinks: true,
        accurateTrackBounce: true,
        webvisor: true,
      });
    </script>
    <noscript>
      <div>
        <img
          src="https://mc.yandex.ru/watch/99150938"
          style="position:absolute; left:-9999px;"
          alt=""
        />
      </div>
    </noscript>
    <!-- /Yandex.Metrika counter -->
  </head>
  <body class="bg-black text-white text-opacity-80">
    <slot />
    <script>
      import AOS from "aos";

      AOS.init({
        duration: 500,
      });
    </script>
  </body>
</html>

<style is:global>
  body {
    font-family: "Rubik Variable", sans-serif;
  }

  p {
    @apply md:text-xl mb-4;
  }

  a {
    @apply hover:opacity-80;
  }

  svg {
    width: 100%;
    height: auto;
  }

  button:disabled,
  button[disabled],
  button:disabled:hover,
  button[disabled]:hover {
    opacity: 0.5;
  }

  .divider {
    @apply w-1/4 m-auto border-b-2 border-gray-700 mb-4;
  }

  .underline-links a {
    @apply underline hover:text-primary transition-colors;
  }

  hr {
    @apply my-2 h-px border-t-0 bg-transparent bg-gradient-to-r from-transparent via-neutral-500 to-transparent opacity-25 dark:via-neutral-400;
  }
</style>
